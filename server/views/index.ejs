<%- include('partials/header', { pageTitle: '最新ニュースレポート' }) %>

<div class="latest" style="background:var(--card-bg); padding:1.5rem; border-radius:12px; box-shadow:0 4px 12px rgba(0,0,0,0.08); margin-bottom:2rem;">
  <h2>📄 最新ニュースレポート</h2>
  <% if (latestHtmlFile) { %>
    <p><a href="/public/history/<%= latestHtmlFile %>" target="_blank">
      <%= formatReportName(latestHtmlFile) %> を表示
    </a></p>
  <% } else { %>
    <p>最新レポートがありません</p>
  <% } %>
</div>

<h3 class="text-lg font-bold mt-6 mb-2">ジャンル別に見る</h3>
<div class="flex flex-wrap gap-2">
  <% categories.forEach(cat => { %>
    <a href="/category/<%= encodeURIComponent(cat) %>"
       class="px-3 py-1 text-sm rounded-full border border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white transition duration-200">
       <%= cat %>
    </a>
  <% }) %>
  <p style="margin-top:1rem;">
    <a href="/public/reports/index.html" target="_blank" style="color:#1e90ff; font-weight:bold;">
      📊 カテゴリ別ニュース一覧を見る
    </a>
  </p>
</div>

<hr class="my-8 md:my-10 border-t border-gray-400/30 dark:border-gray-500/30">

<h2 class="mt-8 md:mt-12">📚 過去のレポート（直近5件）</h2>

<!-- 即時絞り込み用検索 -->
<input type="text" id="searchInput" placeholder="ニュース本文で検索" 
       style="width:100%; max-width:400px; padding:0.5rem; margin-bottom:0.5rem; border-radius:5px; border:1px solid #ccc; background:#fff; color:#000;">

<ul id="reportList">
  <% recentReports.forEach(report => { %>
    <li><a href="/public/history/<%= report.filename %>" target="_blank">
      <%= report.displayName %>
    </a></li>
  <% }) %>
</ul>

<a href="/history"
   class="inline-flex items-center gap-2 px-4 py-2 rounded-md bg-blue-600 text-white font-semibold
          shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400
          transform active:scale-95 transition">
  📚 履歴をもっと見る
</a>

<script>
  const searchInput = document.getElementById('searchInput');
  const reportList  = document.getElementById('reportList');

  // 初期（直近5件リスト）のHTMLを保持：空に戻すとき用
  const initialListHTML = `\
<% recentReports.forEach(report => { %>
  <li><a href="/public/history/<%= report.filename %>" target="_blank"><%= report.displayName %></a></li>
<% }) %>`;

  // 簡易エスケープ
  const esc = (s) => String(s).replace(/[&<>"']/g, m =>
    ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m])
  );

  searchInput.addEventListener('keyup', async function () {
    const query = this.value.trim();

    // 入力なし → 初期表示へ
    if (!query) {
      reportList.innerHTML = initialListHTML;
      return;
    }

    // 直近5レポート限定で検索
    const res    = await fetch(`/search?q=${encodeURIComponent(query)}&scope=recent5`);
    const groups = await res.json();

    // 総ヒット件数（見出し件数）
    const total = groups.reduce((sum, g) => sum + ((g.items && g.items.length) || 0), 0);

    // 0件表示
    if (total === 0) {
      reportList.innerHTML = `
        <li class="list-none">
          <div class="mt-3 p-4 rounded-md shadow"
               style="background:var(--card-bg); color:var(--text-color); border-left:4px solid #f59e0b;">
            該当するニュースが見つかりません。
            <div style="opacity:.8; font-size:.9rem; margin-top:.25rem;">
              ヒント：キーワードを短くする／別表記で試す（例：<span style="opacity:.9">花火大会</span> → <span style="opacity:.9">花火</span>）
            </div>
          </div>
        </li>`;
      return;
    }

    // レポート → 見出し（外部記事URL）を入れ子で表示
    reportList.innerHTML = groups.slice(0, 5).map(g => `
      <li class="mb-3">
        <a href="/public/history/${g.filename}" target="_blank" class="font-semibold underline">
          ${esc(g.displayName)}
        </a>
        <ul class="mt-1 ml-5 list-disc">
          ${(g.items || []).slice(0, 5).map(it =>
            `<li><a href="${esc(it.url)}" target="_blank" rel="noopener noreferrer">${esc(it.title)}</a></li>`
          ).join('')}
        </ul>
      </li>
    `).join('');
  });
</script>

<%- include('partials/footer') %>
